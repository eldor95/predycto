version: 2.1

jobs:
  unit_test:
    resource_class: arm.2xlarge
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.20
      - image: mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: password
      - image: postgres:10.0
        environment:
          POSTGRES_USER: gorse
          POSTGRES_PASSWORD: gorse_pass
      - image: mongo:4.0
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
      - image: redis/redis-stack
    steps:
      - checkout
      - run:
          name: Set up dataset
          command: |
            mkdir -p ~/.gorse/dataset
            mkdir -p ~/.gorse/download
            wget https://cdn.gorse.io/datasets/ml-100k.zip -P ~/.gorse/download
            wget https://cdn.gorse.io/datasets/ml-1m.zip -P ~/.gorse/download
            wget https://cdn.gorse.io/datasets/pinterest-20.zip -P ~/.gorse/download
            wget https://cdn.gorse.io/datasets/frappe.zip -P ~/.gorse/download
            wget https://cdn.gorse.io/datasets/ml-tag.zip -P ~/.gorse/download
            wget https://cdn.gorse.io/datasets/criteo.zip -P ~/.gorse/download
            unzip ~/.gorse/download/ml-100k.zip -d ~/.gorse/dataset
            unzip ~/.gorse/download/ml-1m.zip -d ~/.gorse/dataset
            unzip ~/.gorse/download/pinterest-20.zip -d ~/.gorse/dataset
            unzip ~/.gorse/download/frappe.zip -d ~/.gorse/dataset
            unzip ~/.gorse/download/ml-tag.zip -d ~/.gorse/dataset
            unzip ~/.gorse/download/criteo.zip -d ~/.gorse/dataset
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: go test -timeout 20m -v ./...

workflows:
  test:
    jobs:
      - unit_test:
          name: unit test (arm)
