name: build release

on: release

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
        id: go
        
      - name: Pull source
        uses: actions/checkout@v1
        
      - name: Install gox
        run: go get -v github.com/mitchellh/gox
        
      - name: Build release
        run: gox -osarch='darwin/arm64 darwin/amd64 windows/amd64 linux/amd64' ./...

      - name: Install zip
        uses: montudor/action-zip@v0.1.1

      - name: Zip binaries
        run: |
          zip gorse_linux_amd64.zip gorse-*_linux_amd64
          zip gorse_windows_amd64.zip gorse-*_windows_amd64.exe
          zip gorse_darwin_amd64.zip gorse-*_darwin_amd64
          zip gorse_darwin_arm64.zip gorse-*_darwin_arm64
          
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: gorse_*_*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  build-docker-images:
    name: "Build Docker Images"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: docker/gorse-master
          push: true
          tags: zhenghaoz/gorse-master:${{ github.ref }}
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
