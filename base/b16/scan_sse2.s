//go:build !noasm && amd64
// AUTO-GENERATED BY GOAT -- DO NOT EDIT

TEXT Â·_mm_scan(SB), $0-32
	MOVQ a+0(FP), DI
	MOVQ b+8(FP), SI
	MOVQ n+16(FP), DX
	MOVQ ret+24(FP), CX
	MOVQ n_ret+32(FP), R8
	BYTE $0x55                                 // pushq	%rbp
	WORD $0x8948; BYTE $0xe5                   // movq	%rsp, %rbp
	LONG $0xf8e48348                           // andq	$-8, %rsp
	LONG $0x076f0ff3                           // movdqu	(%rdi), %xmm0
	LONG $0xce6e0f66                           // movd	%esi, %xmm1
	LONG $0xc9600f66                           // punpcklbw	%xmm1, %xmm1
	LONG $0xc9700ff2; BYTE $0x00               // pshuflw	$0, %xmm1, %xmm1
	LONG $0xc9700f66; BYTE $0x00               // pshufd	$0, %xmm1, %xmm1
	LONG $0xc8740f66                           // pcmpeqb	%xmm0, %xmm1
	LONG $0xc1d70f66                           // pmovmskb	%xmm1, %eax
	LONG $0x0000c749; WORD $0x0000; BYTE $0x00 // movq	$0, (%r8)
	WORD $0xc085                               // testl	%eax, %eax
	JE   LBB0_4
	WORD $0xb70f; BYTE $0xc0                   // movzwl	%ax, %eax
	WORD $0xf631                               // xorl	%esi, %esi

LBB0_2:
	LONG $0xf8bc0f48         // bsfq	%rax, %rdi
	WORD $0x3948; BYTE $0xd7 // cmpq	%rdx, %rdi
	JGE  LBB0_4
	LONG $0xf13c8948         // movq	%rdi, (%rcx,%rsi,8)
	WORD $0x8b49; BYTE $0x30 // movq	(%r8), %rsi
	LONG $0x01c68348         // addq	$1, %rsi
	WORD $0x8949; BYTE $0x30 // movq	%rsi, (%r8)
	LONG $0xff788d48         // leaq	-1(%rax), %rdi
	WORD $0x2148; BYTE $0xf8 // andq	%rdi, %rax
	JNE  LBB0_2

LBB0_4:
	WORD $0x8948; BYTE $0xec // movq	%rbp, %rsp
	BYTE $0x5d               // popq	%rbp
	BYTE $0xc3               // retq
