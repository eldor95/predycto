//go:build !noasm && amd64
// AUTO-GENERATED BY GOAT -- DO NOT EDIT

TEXT Â·_scan_int32(SB), $0-32
	MOVQ h_keys+0(FP), DI
	MOVQ h2+8(FP), SI
	MOVQ keys+16(FP), DX
	MOVQ key+24(FP), CX
	MOVQ n+32(FP), R8
	MOVQ ret+40(FP), R9
	BYTE $0x55                                 // pushq	%rbp
	WORD $0x8948; BYTE $0xe5                   // movq	%rsp, %rbp
	LONG $0xf8e48348                           // andq	$-8, %rsp
	LONG $0x076f0ff3                           // movdqu	(%rdi), %xmm0
	LONG $0xce6e0f66                           // movd	%esi, %xmm1
	LONG $0xc9600f66                           // punpcklbw	%xmm1, %xmm1
	LONG $0xc9700ff2; BYTE $0x00               // pshuflw	$0, %xmm1, %xmm1
	LONG $0xc9700f66; BYTE $0x00               // pshufd	$0, %xmm1, %xmm1
	LONG $0xc8740f66                           // pcmpeqb	%xmm0, %xmm1
	LONG $0xc1d70f66                           // pmovmskb	%xmm1, %eax
	LONG $0xff01c749; WORD $0xffff; BYTE $0xff // movq	$-1, (%r9)
	WORD $0xc085                               // testl	%eax, %eax
	JE   LBB0_6
	WORD $0xb70f; BYTE $0xc0                   // movzwl	%ax, %eax

LBB0_2:
	LONG $0xf0bc0f48         // bsfq	%rax, %rsi
	WORD $0x394c; BYTE $0xc6 // cmpq	%r8, %rsi
	JGE  LBB0_6
	LONG $0xb23c6348         // movslq	(%rdx,%rsi,4), %rdi
	WORD $0x3948; BYTE $0xcf // cmpq	%rcx, %rdi
	JE   LBB0_4
	LONG $0xff708d48         // leaq	-1(%rax), %rsi
	WORD $0x2148; BYTE $0xf0 // andq	%rsi, %rax
	JNE  LBB0_2

LBB0_6:
	WORD $0x8948; BYTE $0xec // movq	%rbp, %rsp
	BYTE $0x5d               // popq	%rbp
	BYTE $0xc3               // retq

LBB0_4:
	WORD $0x8949; BYTE $0x31 // movq	%rsi, (%r9)
	WORD $0x8948; BYTE $0xec // movq	%rbp, %rsp
	BYTE $0x5d               // popq	%rbp
	BYTE $0xc3               // retq
